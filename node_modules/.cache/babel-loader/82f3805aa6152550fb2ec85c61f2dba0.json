{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/MY-React-Project/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(function () {\n    fetch('https://api.github.com/search/repositories?q=react&per_page=100&page=1').then(preResult => preResult.json()).then(result => setUsers(result.items));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: users.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: repo.id + \"-       -\" + repo.full_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 32\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/Desktop/MY-React-Project/src/App.jsx"],"names":["useState","useEffect","App","users","setUsers","fetch","then","preResult","json","result","items","map","repo","id","full_name"],"mappings":";;;AAAA,SAAUA,QAAV,EAAoBC,SAApB,QAAqC,OAArC;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE1B,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAjC;AAEFC,EAAAA,SAAS,CAAE,YAAW;AACpBI,IAAAA,KAAK,CAAC,wEAAD,CAAL,CACCC,IADD,CACMC,SAAS,IAAIA,SAAS,CAACC,IAAV,EADnB,EAECF,IAFD,CAEMG,MAAM,IAAIL,QAAQ,CAACK,MAAM,CAACC,KAAR,CAFxB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAME,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACKP,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAuBA,IAAI,CAACC,EAAL,GAAS,WAAT,GAAsBD,IAAI,CAACE;AAAlD;AAAA;AAAA;AAAA;AAAA,YAAlB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAfuBZ,G;;KAAAA,G","sourcesContent":["import  { useState, useEffect } from \"react\";\n\n\nexport default function App (){\n\n    const[users, setUsers] = useState([])\n\n  useEffect( function (){\n    fetch('https://api.github.com/search/repositories?q=react&per_page=100&page=1')\n    .then(preResult => preResult.json())\n    .then(result => setUsers(result.items))\n  }, [])\n\n    return(\n        <div className=\"main\">\n            {users.map(repo => <div className=\"list\">{repo.id +\"-       -\"+ repo.full_name}</div> )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}